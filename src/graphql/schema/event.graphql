query EventFormFields {
  eventFormFields {
    id
    name
    label
    type
    required
    order
  }
}

mutation CreateEvent($input: eventInput!) {
  createEvent(input: $input) {
    code
    success
    message
    event {
      id
      name
      theme
      description
      type
      link
      address
      starts_at
      ends_at
      paymentType
      amount
      tickets
      isInfinity
      coverPhoto
      userId
      formTitle
      instructions
      message
      user {
        member {
          firstName
          lastName
        }
      }
      eventForms {
        id
        name
        type
        required
      }
      createdAt
      status
    }
  }
}

query GetEvents {
  getEvents {
    coverPhoto
    amount
    tickets
    address
    id
    name
    theme
    type
    status
    starts_at
    eventRegistrations {
      id
    }
    eventPlanPrices {
      tickets
    }
  }
}

query GetEvent($eventId: UUID!) {
  getEvent(eventId: $eventId) {
    id
    name
    theme
    amount
    tickets
    isInfinity
    formTitle
    message
    views
    eventRegistrations {
      id
    }
    eventPlanPrices {
      tickets
      charge
    }
  }
}

mutation CancelEvent($eventId: UUID!, $status: String!) {
  cancelEvent(eventId: $eventId, status: $status)
}

mutation DeleteEvent($eventId: UUID!) {
  deleteEvent(eventId: $eventId)
}

mutation WatchEventViews($eventId: UUID!) {
  watchEventViews(eventId: $eventId)
}

query GetRegisteredMembers($eventId: UUID!) {
  getRegisteredMembers(eventId: $eventId) {
    id
    registrantDetail
    createdAt
  }
}

query GetMembersAttendance($eventId: UUID!) {
  getMembersAttendance(eventId: $eventId) {
    id
    registrantDetail
    checkin
    checkinDate
    createdAt
  }
}

query GetEventsForPublic {
  getEventsForPublic {
    id
    type
    status
    starts_at
    starts_time
    paymentType
    name
    theme
    eventRegistrations {
      id
    }
    eventPlanPrices {
      tickets
      charge
    }
    coverPhoto
    createdAt
    amount
    tickets
  }
}

query GetEventForPublic($eventId: UUID!) {
  getEvent(eventId: $eventId) {
    address
    amount
    coverPhoto
    description
    id
    name
    theme
    paymentType
    starts_at
    starts_time
    sponsors {
      id
      logo
    }
    eventResources {
      id
      resourceUrl
      name
    }
    speakers {
      about
      avatar
      id
      name
      title
    }
    eventPlanPrices {
      tickets
      charge
      name
      membershipTypeId
    }
    status
    type
  }
}

query GetUpComingEvents($memberId: UUID!) {
  getUpComingEvents(memberId: $memberId) {
    id
    createdAt
    event {
      id
      starts_at
      starts_time
      name
      coverPhoto
    }
  }
}

query GetPastEvents {
  getPastEvents {
    id
    starts_at
    starts_time
    name
    theme
    coverPhoto
    eventRegistrations {
      createdAt
      memberId
      id
    }
  }
}

query GetRegistrationForm($eventId: UUID!) {
  getRegistrationForm(eventId: $eventId) {
    name
    theme
    amount
    formTitle
    instructions
    status
    paymentType
    coverPhoto
    eventForms {
      id
      name
      label
      type
      required
      priority
    }
  }
}

query GetRegistrationFormDetails($eventId: UUID!) {
  getRegistrationForm(eventId: $eventId) {
    id
    name
    theme
    amount
    status
    paymentType
    eventPlanPrices {
      eventId
      membershipTypeId
      charge
      tickets
    }
  }
}

mutation PostEventRegistration($input: eventRegistrationInput!) {
  postEventRegistration(input: $input) {
    id
    memberId
    eventId
    registrantDetail
    checkin
    checkinDate
    createdAt
    updatedAt
  }
}

mutation ResendEventMail($input: sendMailInput!){
  resendEventMail(input: $input)
}

mutation memberEventCheckin($id: UUID!){
  memberEventCheckin(id: $id)
}